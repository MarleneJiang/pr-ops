name: Subscribe to updates

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - '**.md'
jobs:
  subscribe:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get PR info
        run: echo "PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')" >> $GITHUB_ENV

      - name: Fetch changes
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git fetch origin ${{ github.event.pull_request.head.ref }}

      - name: Get changed .md files
        run: echo "FILES=$(git diff --name-only ${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.ref }} | grep '\.md$')" >> $GITHUB_OUTPUT

      - name: Get changes
        run: |
          CHANGES=""
          for FILE in $(cat $GITHUB_OUTPUT | awk -F= '/FILES/ {print $2}')
          do
            CHANGES+=$(git diff ${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.ref }} -- $FILE)
          done
          echo "CHANGES=$CHANGES" >> $GITHUB_OUTPUT

      - name: Check PR labels and Send updates
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{owner}/{repo}/pulls/{pull_number}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          pull_number: $(cat $GITHUB_ENV | awk -F= '/PR_NUMBER/ {print $2}')
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Send POST request
        run: |
          LABELS=$(echo '${{ steps.pr_data.outputs.data }}' | jq -r '.labels[].name')
          for LABEL in $LABELS
          do
            case $LABEL in
            "web")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            "安全")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            "科协")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            "AI")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            esac

            if [ ! -z "$API_ENDPOINT" ]; then
              curl -X POST $API_ENDPOINT \
              -H "Content-Type: application/json" \
              -d '{ "message": "New update in PR #'$(cat $GITHUB_ENV | awk -F= '/PR_NUMBER/ {print $2}')' with changes: '$(cat $GITHUB_OUTPUT | awk -F= '/CHANGES/ {print $2}')'" }'
            fi
          done