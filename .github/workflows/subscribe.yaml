name: Subscribe to updates

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - '**.md'
jobs:
  subscribe:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get PR info
        id: pr_info
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "::set-output name=number::$PR_NUMBER"

      - name: Fetch changes
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git fetch origin ${{ github.event.pull_request.head.ref }}

      - name: Get changed .md files
        id: changed_files
        run: |
          FILES=$(git diff --name-only ${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.ref }} | grep '\.md$')
          echo "::set-output name=files::$FILES"

      - name: Get changes
        id: get_changes
        run: |
          CHANGES=""
          for FILE in ${{ steps.changed_files.outputs.files }}
          do
            CHANGES+=$(git diff ${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.ref }} -- $FILE)
          done
          echo "::set-output name=changes::$CHANGES"

      - name: Check PR labels and Send updates
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{owner}/{repo}/pulls/{pull_number}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          pull_number: ${{ steps.pr_info.outputs.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
        id: pr_data

      - name: Send POST request
        run: |
          LABELS=$(echo '${{ steps.pr_data.outputs.data }}' | jq -r '.labels[].name')
          for LABEL in $LABELS
          do
            case $LABEL in
            "web")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            "安全")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            "科协")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            "AI")
              API_ENDPOINT="https://np4l5e.laf.run/pr"
              ;;
            esac

            if [ ! -z "$API_ENDPOINT" ]; then
              curl -X POST $API_ENDPOINT \
              -H "Content-Type: application/json" \
              -d '{ "message": "New update in PR #'$PR_NUMBER' with changes: '${{ steps.get_changes.outputs.changes }}'" }'
            fi
          done